---
let { event } = Astro.props;

function formatDate(dateString, options) {
    const date = new Date(dateString);
    return date.toLocaleDateString(undefined, options);
}

function formatTime(dateString, options) {
    const date = new Date(dateString);
    return date.toLocaleTimeString(undefined, options);
}

function renderTimeElement(dateString, day) {
    const dateOptions = { month: 'long', day: 'numeric', ...(day ? {} : { hour: 'numeric', minute: 'numeric' }) };
    const timeOptions = { timeZoneName: 'short' };

    return (
        <time datetime={new Date(dateString).toISOString()}>
            {formatDate(dateString, dateOptions)}
            {!day && (
                <abbr title={formatTime(dateString, { timeZoneName: 'long' })}>
                    {formatTime(dateString, timeOptions)}
                </abbr>
            )}
        </time>
    );
}
---

<div class="event__dates text-muted">
    <span class="event__dateStart">
        <span class="sr-only">Starts</span>
        {renderTimeElement(event.dateStart, event.day)}
    </span>
    {event.dateEnd && (
        <span class="event__dateEnd">
            <span class="sr-only">Ends</span>
            <i class="fa-solid fa-arrow-right-long"></i>
            {renderTimeElement(event.dateEnd, event.day)}
        </span>
    )}
</div>